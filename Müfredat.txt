
https://kommunity.com/techistanbul/events/java-ile-yazilim-gelistirme-bootcamp-programi-c97618fa

### Ders Programı
4 Şubat Salı – 29 Mart Cumartesi
Haftada 3 Gün | Salı, Perşembe 18:00-21:00 | Cumartesi 18:00-22:00
Toplam: 8 Hafta – 80 Saat
İlk 6 hafta konu + örnek-soru çözümleri + best practice
son 2 hafta öğrenilen yerlerle ilgili sıfırdan  ATM projesi, oop, database, collection etc

---

### 1. Hafta
Salı (4 Şubat) - 3 Saat
- Giriş ve Kurulum
  . Java Nedir?
  . Java’nın Tarihçesi ve Sürümleri
  . JDK ve IDE kurulumu (IntelliJ, Eclipse tanıtımı)
  . Temel komut satırı araçları (javac, java vb.)

Perşembe (6 Şubat) - 3 Saat
- Temel Java Sözdizimi
  . Değişkenler ve Veri Tipleri
  . Operatörler (Aritmetik, Karşılaştırma, Mantıksal vb.)

Cumartesi (8 Şubat) - 4 Saat
- Kontrol Yapıları
  . if-else, switch-case
  . for, while, do-while döngüleri
- Metotlar (Yöntemler)
  . Parametre kullanımı, dönüş değerleri, overloading

---

### 2. Hafta
Salı (11 Şubat) - 3 Saat
- Nesne Yönelimli Programlama (OOP) Temelleri
  . Sınıflar ve Nesneler (Constructor dahil)
  . Kapsülleme (Encapsulation)

Perşembe (13 Şubat) - 3 Saat
- Kalıtım (Inheritance)
  . Super ve Subclass kavramları
  . Override ve Overload farkı

Cumartesi (15 Şubat) - 4 Saat
- Polimorfizm (Polymorphism)
  . Dinamik ve Statik Polimorfizm örnekleri
- Soyutlama (Abstraction)
  . Abstract sınıflar ve arabirimler (interface)

---

### 3. Hafta
Salı (18 Şubat) - 3 Saat
- Paketler ve Erişim Belirleyiciler
  . Paketlerin Kullanımı
  . Erişim Belirleyiciler (public, private, protected)

Perşembe (20 Şubat) - 3 Saat
- İstisnalar (Exceptions)
  . Exception Kavramı (Checked ve Unchecked ayrımı)
  . Try-Catch-Finally

Cumartesi (22 Şubat) - 4 Saat
- Throw, Throws
  . Özel Exception sınıfları yazma

---

### 4. Hafta
Salı (25 Şubat) - 3 Saat
- Koleksiyonlar (Collections) ve Generics
  . Collection Framework Genel Bakış (List, Set, Map)
  . Temel implementasyonlar (ArrayList, LinkedList vb.)

Perşembe (27 Şubat) - 3 Saat
- Generics (Tür Belirleyici)
  . Tip güvenliği
  . Iterator ve ListIterator

Cumartesi (1 Mart) - 4 Saat
- Java 8+ Yenilikleri
  . Lambda İfadeleri
  . Fonksiyonel Arabirimler

---

### 5. Hafta
Salı (4 Mart) - 3 Saat
- Stream API
  . filter, map, reduce gibi fonksiyonlar
- Method ve Constructor Reference

Perşembe (6 Mart) - 3 Saat
- Optional Sınıfı
  . Yeni Tarih ve Zaman API (java.time)

Cumartesi (8 Mart) - 4 Saat
- Giriş/Çıkış (I/O) İşlemleri
  . Java I/O Temelleri (Stream, Reader/Writer)
  . File I/O

---

### 6. Hafta
Salı (11 Mart) - 3 Saat
- Çoklu İş Parçacığı (Multithreading)
  . Thread Oluşturma ve Yönetimi
  . Senkronizasyon

Perşembe (13 Mart) - 3 Saat
- Eşzamanlılık (Concurrency)
  . Yardımcı sınıflar (CountDownLatch, CyclicBarrier vb.)
  . Concurrency API

Cumartesi (15 Mart) - 4 Saat
- JDBC ve Veritabanı Bağlantısı
  . JDBC Mimarisi
  . CRUD İşlemleri
  . PreparedStatement ve CallableStatement

---

### Toplam Süre: 60 Saat


#####################################################################
Eğer yetişirse; JavaFX kullanılacak
ATM projesi için yukarıdaki Java SE konu başlıklarını kullanarak iki haftalık bir plan hazırladım.
Bu plan, proje geliştirme sürecinde temel kavramları uygulamalı olarak içerecek şekilde yapılandırılmıştır.


ATM Projesi Planı

 7. Hafta
 18 Mart Salı (18:00 - 22:00)
Konu: Proje Başlangıcı ve Temel Yapının Kurulması
- ATM Projesi Tanıtımı
  * Projenin genel tanıtımı ve hedefleri
  * Fonksiyonel gereksinimlerin belirlenmesi (Para çekme, para yatırma, bakiye görüntüleme, kullanıcı giriş kontrolü)
- Proje Yapısının Oluşturulması
  * Sınıf ve paket yapısının planlanması
  * Nesne yönelimli programlama (OOP) kullanılarak sınıfların tanımlanması (Kullanıcı, Hesap, ATM)
  * Constructor, getter/setter ile sınıfların tamamlanması

 20 Mart Perşembe (18:00 - 21:00)
Konu: Kullanıcı Girişi ve Hesap İşlemleri
- Kontrol Yapıları ve Döngüler Uygulaması
  * Kullanıcı giriş ekranı (if-else, switch-case kullanımı)
  * Kullanıcı doğrulama ve hata yönetimi (Exception handling)
- Temel Hesap İşlemleri
  * Bakiye sorgulama, para çekme, para yatırma metodlarının yazılması

 22 Mart Cumartesi (18:00 - 21:00)
Konu: Veri Kaydetme ve Koleksiyon Kullanımı
- Kullanıcı Hesaplarının Yönetimi
  * Kullanıcı bilgilerini ve hesaplarını ArrayList veya HashMap ile yönetmek
  * Generics kullanımı ile tip güvenli veri yapıları
- Dosya İşlemleri ile Veri Kalıcılığı
  * Kullanıcı bilgilerini dosyaya kaydetme ve okuma (File I/O)
  * Kullanıcı hesap hareketlerini log dosyasında tutma

---

 8. Hafta
 25 Mart Salı (18:00 - 22:00)
Konu: İleri Düzey İşlemler ve Multithreading
- Çoklu İş Parçacığı Kullanımı
  * ATM'de eş zamanlı işlemler (örneğin, farklı hesaplar için aynı anda işlem yapılması)
  * Thread kullanımı ve senkronizasyon
- Exception Handling ve Hata Yönetimi
  * Kullanıcı hataları ve özel exception sınıfları yazma
  * Hataların loglanması

 27 Mart Perşembe (18:00 - 21:00)
Konu: Veritabanı Entegrasyonu
- JDBC ile Veritabanı Bağlantısı
  * Kullanıcı bilgilerini veritabanına kaydetme ve okuma
  * Hesap hareketlerinin SQL sorguları ile işlenmesi (CRUD işlemleri)
- PreparedStatement Kullanımı
  * Güvenli veri girişi ve SQL enjeksiyonuna karşı önlemler

 29 Mart Cumartesi (18:00 - 21:00)
Konu: Proje Tamamlanması ve Sunum
- Kapsamlı ATM Uygulaması
  * Tüm fonksiyonların entegre edilmesi
  * Son testler ve hata düzeltmeleri
- Proje Sunumu
  * Proje özelliklerinin açıklanması
  * Kullanıcı senaryoları üzerinden proje tanıtımı

---

 ATM Projesinde Kullanılan Java SE Konuları
1. Operatörler ve Kontrol Yapıları
   * If-else, switch-case, for, while, do-while
2. OOP İlkeleri
   * Sınıflar, nesneler, kalıtım, polimorfizm, encapsulation, soyutlama
3. Koleksiyonlar
   * ArrayList, HashMap, Generics
4. İstisnalar ve Hata Yönetimi
   * Try-catch, özel exception sınıfları
5. Dosya İşlemleri (I/O)
   * Kullanıcı verilerinin dosyaya yazılması ve okunması
6. Multithreading
   * ATM işlemleri için eş zamanlılık
7. JDBC ve Veritabanı Bağlantısı
   * Kullanıcı bilgilerini ve hesap hareketlerini SQL ile yönetme

Bu takvim, her konunun derinlemesine işlenmesi ve pratik yapılması için yeterli zaman tanıyacak şekilde hazırlanmıştır.